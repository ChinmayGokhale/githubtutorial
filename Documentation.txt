Variables
--------------
Declare Variables using var, const, let
e.g., var general, sum;
console.log(typeof varname);


Data Types
--------------
int, float, string, boolean, array, object, special datatypes
int
var num = 1;

float
var salary = 25800.58;

string
var str = "Chinmay";
str.length gives the length of the string

boolean
var res = true;

Arrays
var space = ["moon", "earth", "sun"];
indexing starts with 0

Accessing the array 
console.log(space[0]);
length of array
space.length

Type Conversions
 + is overloaded
if either left or right operands is a string then the result is a string.

var num = 5;
var result = num + "5";
console.log(result + typeof result);

parseInt() and parseFloat()
var num = prompt("Enter some value");
console.log(typeof num);
console.log(parseInt(num) + 9);


Operators
----------------

Arithmatic +,-,*,/, %(modulus)

Increment and Decrement Operators ++ ,--


String Operators  +

Assignment Operators :-  =, +=, -=, *=, /=, %=

Comparison Operators :- ==, !=, <, >, <=, >=,
=== same value and datatype
!== not equal and not same datatype

Boolean Operators && : AND, ||: OR , !: NOT

Ternary Operators
var res = Condition? do something : do something

Conditions
------------
if(Condition){
    //do something
}


if(Condition){
//do something
}
else{
    //do something
}

if(Condition){
    do something
}
else if(Condition){
    do something
}

Switch(height){
    case 5.5:
    //do something
    break;
    case 6.5:
    //do something
    break;
    default:
    // do the default thing
}

Looping
-------------
for loop
for(var i; i< space.length;i++){
    //do something
}

for(i in space ){
    //do something
}

while(Condition){
    //do something

}

do{

}while(Condition);

functions
---------------

function name(params){

    //do something
    return statement;
}

Types of functions
1. Named Functions
2. Anonymous functions
3. Self Invoking --IIFE
4. Constructors

function name(params){
    do something
    return
}

var fnname = function (params){
    do something
    return;
}

var cons = new Function(params, return statement);
cons(params);

(function name(params){
    //this is a self invoking function
    do something
})();

Memory Management
---------------------

object creation
var person = new Object();
person.name = "Chinmay";
person['lastname'] = "Gokhale";
person.talk = function (){ //do something};


var person = {};
//another name

Functions Constructors
-----------------------
function Person(name, age){
    this.name = name;
    this.age = age;
}

var person = new Person("Chinmay", 22);

Refer vidoes for prototypal inheritance from Coursera
